/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void controlPanelDraw(PApplet appc, GWinData data) { //_CODE_:controlPanel:612462:
  appc.background(230);
} //_CODE_:controlPanel:612462:

public void remove1ParticleClick(GButton source, GEvent event) { //_CODE_:remove1Particle:223640:
  synchronized (particleSystem) {
    particleSystem.removeNParticles(1);
  }
} //_CODE_:remove1Particle:223640:

public void remove10ParticlesClick(GButton source, GEvent event) { //_CODE_:remove10Particles:369045:
  synchronized (particleSystem) {
    particleSystem.removeNParticles(10);
  }
} //_CODE_:remove10Particles:369045:

public void add1ParticleClick(GButton source, GEvent event) { //_CODE_:add1Particle:537328:
  synchronized (particleSystem) {
    particleSystem.add(generateParticle());
  }
} //_CODE_:add1Particle:537328:

public void add10ParticlesClick(GButton source, GEvent event) { //_CODE_:add10Particles:964960:
  synchronized (particleSystem) {
    for (int i = 0; i < 10; i++) {
      particleSystem.add(generateParticle());
    }
  }
} //_CODE_:add10Particles:964960:

public void gravitySliderChange(GCustomSlider source, GEvent event) { //_CODE_:gravitySlider:832510:
  synchronized (particleSystem) {
    gravity.y = gravitySlider.getValueF();
  }
} //_CODE_:gravitySlider:832510:

public void sourceHeatSliderChange(GCustomSlider source, GEvent event) { //_CODE_:sourceHeatSlider:752988:
  println("custom_slider1 - GCustomSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:sourceHeatSlider:752988:

public void addCubeClick(GButton source, GEvent event) { //_CODE_:addCube:868378:
  println("addCube - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:addCube:868378:

public void particleSizeSliderChange(GCustomSlider source, GEvent event) { //_CODE_:particleSizeSlider:859119:
  particleSize = particleSizeSlider.getValueF();
} //_CODE_:particleSizeSlider:859119:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  controlPanel = GWindow.getWindow(this, "Control Panel", 0, 0, 350, 250, JAVA2D);
  controlPanel.noLoop();
  controlPanel.setActionOnClose(G4P.KEEP_OPEN);
  controlPanel.addDrawHandler(this, "controlPanelDraw");
  remove1Particle = new GButton(controlPanel, 50, 30, 80, 30);
  remove1Particle.setText("Remove 1");
  remove1Particle.setLocalColorScheme(GCScheme.RED_SCHEME);
  remove1Particle.addEventHandler(this, "remove1ParticleClick");
  remove10Particles = new GButton(controlPanel, 50, 60, 80, 30);
  remove10Particles.setText("Remove 10");
  remove10Particles.setLocalColorScheme(GCScheme.RED_SCHEME);
  remove10Particles.addEventHandler(this, "remove10ParticlesClick");
  numParticlesLabel = new GLabel(controlPanel, 130, 30, 80, 60);
  numParticlesLabel.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  numParticlesLabel.setText("Number of Particles:         0");
  numParticlesLabel.setOpaque(false);
  add1Particle = new GButton(controlPanel, 210, 30, 80, 30);
  add1Particle.setText("Add 1");
  add1Particle.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  add1Particle.addEventHandler(this, "add1ParticleClick");
  add10Particles = new GButton(controlPanel, 210, 60, 80, 30);
  add10Particles.setText("Add 10");
  add10Particles.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  add10Particles.addEventHandler(this, "add10ParticlesClick");
  gravitySlider = new GCustomSlider(controlPanel, 320, 120, 100, 40, "blue18px");
  gravitySlider.setRotation(PI/2, GControlMode.CORNER);
  gravitySlider.setLimits(0.7, 0.0, 2.0);
  gravitySlider.setNbrTicks(11);
  gravitySlider.setShowTicks(true);
  gravitySlider.setNumberFormat(G4P.DECIMAL, 2);
  gravitySlider.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  gravitySlider.setOpaque(false);
  gravitySlider.addEventHandler(this, "gravitySliderChange");
  sourceHeatSlider = new GCustomSlider(controlPanel, 280, 120, 100, 40, "blue18px");
  sourceHeatSlider.setRotation(PI/2, GControlMode.CORNER);
  sourceHeatSlider.setLimits(2.4, 0.5, 5.0);
  sourceHeatSlider.setNbrTicks(11);
  sourceHeatSlider.setShowTicks(true);
  sourceHeatSlider.setNumberFormat(G4P.DECIMAL, 2);
  sourceHeatSlider.setOpaque(false);
  sourceHeatSlider.addEventHandler(this, "sourceHeatSliderChange");
  addCube = new GButton(controlPanel, 30, 120, 80, 30);
  addCube.setText("Add Cube");
  addCube.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  addCube.addEventHandler(this, "addCubeClick");
  particleSizeSlider = new GCustomSlider(controlPanel, 240, 120, 100, 40, "blue18px");
  particleSizeSlider.setRotation(PI/2, GControlMode.CORNER);
  particleSizeSlider.setLimits(7.0, 0.01, 10.0);
  particleSizeSlider.setNbrTicks(11);
  particleSizeSlider.setShowTicks(true);
  particleSizeSlider.setNumberFormat(G4P.DECIMAL, 2);
  particleSizeSlider.setOpaque(false);
  particleSizeSlider.addEventHandler(this, "particleSizeSliderChange");
  controlPanel.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow controlPanel;
GButton remove1Particle; 
GButton remove10Particles; 
GLabel numParticlesLabel; 
GButton add1Particle; 
GButton add10Particles; 
GCustomSlider gravitySlider; 
GCustomSlider sourceHeatSlider; 
GButton addCube; 
GCustomSlider particleSizeSlider; 
